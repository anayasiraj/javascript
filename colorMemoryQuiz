

var centerX = getWidth() / 2;
var centerY = getHeight() / 2;

// shuffles a given array and replaces itself with it. 

function shuffle(array) {
    let cur = array.length,  inx;
    while (cur != 0) {
        inx = Math.floor(Math.random() * cur);
        cur--;
        [array[cur], array[inx]] = [array[inx], array[cur]];
    }
    return array;
}

// draws background with a border. color is based on mainColor set chosen (bgColor).
function drawBackground(){
    rect(getWidth(), getHeight(), bgColor, 0, 0);
    rect(getWidth()-50, getHeight()-50, "#FFFFFF", 25, 25);
}

// 3 main sets of colors player can get when starting the game.
var redShades = ["#EDADAD", "#FC9292", "#EF7070", "#FF4F4F", "#CA3333", "#A71313", "#7E0D0D"]; 
var orangeShades = ["#F3D1BF", "#D19F85", "#F39969", "#EE793B", "#D0652D", "#F95E0C", "#AD440D"];
var blueShades = ["#ADD3DE", "#9AE3F8", "#7ABDD0", "#52BBDA", "#2D9FC0", "#06B3E4", "#096D89"];

// chooses between red orange and blue shade sets right when the game starts.
var int1 = Randomizer.nextInt(1, 3);
    if(int1==1){
        var mainColor = redShades;
        var bgColor = "#FF4F4F";
    }else if(int1==2){
        var mainColor = orangeShades;
        var bgColor = "#F87129";
    } else{
        var mainColor = blueShades;
        var bgColor = "#4DAFCC"; 
    }
// removing one of the shades from the main color list. this will be the missing shade.
// newShades are the only 6 shades that will show when the player draws.
shuffle(mainColor);
var missing = mainColor.pop();
var newShades = mainColor;

//answer choices. list of 3 including missing shade.
var choice1 = mainColor[4];
var choice2 = mainColor[5];
var choices = [];
choices.push(choice1);
choices.push(choice2);
choices.push(missing);

// randomize the order of the choices so the correct answer will not always be in the same spot. 
shuffle(choices);

// the index of missing (+ 1) will be the answer the user need to enter at the end
var correctAnsInx = choices.indexOf(missing);


// instructions. player can press spacebar to start drawingtime.
function start(){
    drawBackground();
    text("color memory", "bold 23pt Verdana", bgColor, centerX, centerY-115);
    text("game instructions:", "bold 23pt Verdana", bgColor, centerX, centerY-79);
    text("you will be given a set of colors", "14pt Verdana", bgColor, centerX, centerY-25);
    text("you will be able to see by clicking", "14pt Verdana", bgColor, centerX, centerY);
    text("or dragging your mouse. after 15", "14pt Verdana", bgColor, centerX, centerY+25);
    text("seconds, you will need to choose", "14pt Verdana", bgColor, centerX, centerY+50);
    text("which of the given answer choices", "14pt Verdana", bgColor, centerX, centerY+75);
    text("was NOT shown in your set!", "14pt Verdana", bgColor, centerX, centerY+100);
    text("press SPACE to begin!", "bold 18pt Verdana", bgColor, centerX, centerY+155);
    keyDownMethod(keyDown);
}

// player can trigger drawingTime function with spacebar.
function keyDown(e){
    if(e.keyCode == Keyboard.SPACE){
        drawingTime();
        setTimeout(choosingScreen, 15000);
    }
}


// allows player to draw only during this function. runs timer function with loop.
function drawingTime(){
    drawBackground();
    function drawBalls(e){
        var int = Randomizer.nextInt(0, 5);
        var color = newShades[int];
        circle(20, color, e.getX(), e.getY());
    }
    mouseDragMethod(drawBalls);
    mouseClickMethod(drawBalls);
    var sec = 0;
    for (sec=0; sec<=14; sec++){
        timer(sec);
    }
}


function timer(sec) {
    setTimeout(function() {
      circle(25, Color.WHITE, centerX, centerY-189);
      text(sec+1, "27pt Verdana", Color.BLACK, centerX, centerY-175);
  }, 1000 * sec);
}


// screen player sees while they need to choose. triggers function that lets them type answer.
function choosingScreen(){
    mouseDragMethod();
    mouseClickMethod();
    drawBackground();
    text("which of these colors", "22pt Verdana", bgColor, centerX, centerY-85);
    text("did you NOT see?", "22pt Verdana", bgColor, centerX, centerY-50);
    circle(35, choices[0], centerX-100, centerY+40);
    text("1", "23pt Verdana", bgColor, centerX-100, centerY+110);
    circle(35, choices[1], centerX, centerY+40);
    text("2", "23pt Verdana", bgColor, centerX, centerY+110);
    circle(35, choices[2], centerX+100, centerY+40);
    text("3", "23pt Verdana", bgColor, centerX+100, centerY+110);
    setTimeout(function() {
        choosingTime(correctAnsInx);
        }, 500)
}


// if user chooses the right answer, it brings them to the winner screen.
// if user chooses the wrong answer, it brings them to the loser screen.
// if user types an answer other than 1, 2, or 3, they are asked to try choosing again.
function choosingTime(x){
    var userAns = readInt("Which of these colors did you NOT see? 1, 2, or 3?");
    while (userAns < 1 || userAns > 3){
        var userAns = readInt("Your only options are 1, 2, or 3. Try again!");
    }
    if(userAns-1 == x){
        winnerScreen();
    } else{
        loserScreen();
    }
}

// ending screen if player DOES choose the right answer.
function winnerScreen(){
    drawBackground();
    text("YOU WERE", "bold 22pt Verdana", bgColor, centerX-65, centerY);
    text("RIGHT!", "bold 22pt Verdana", "#01DF61", centerX+93, centerY);
    circle(25, mainColor[0], centerX+30, centerY+175);
    circle(25, mainColor[1], centerX-125, centerY+135);
    circle(25, mainColor[2], centerX-96, centerY-160);
    circle(25, mainColor[3], centerX+15, centerY-95);
    circle(25, mainColor[4], centerX-35, centerY+65);
    circle(25, mainColor[5], centerX+120, centerY-145);
    circle(25, missing, centerX+110, centerY+90);
}

// ending screen if player does NOT choose the right answer.
function loserScreen(){
    drawBackground();
    var correctAnsNum = correctAnsInx + 1;
    text("YOU WERE", "bold 22pt Verdana", bgColor, centerX-75, centerY);
    text("WRONG!", "bold 22pt Verdana", "#F41555", centerX+93, centerY);
    text("it was " + correctAnsNum, "bold 12pt Verdana", bgColor, centerX-90, centerY-60);
    circle(25, mainColor[0], centerX+30, centerY+175);
    circle(25, mainColor[1], centerX-125, centerY+135);
    circle(25, mainColor[2], centerX-96, centerY-160);
    circle(25, mainColor[3], centerX+15, centerY-95);
    circle(25, mainColor[4], centerX-35, centerY+65);
    circle(25, mainColor[5], centerX+120, centerY-145);
    circle(25, missing, centerX+110, centerY+90);
}


// rectangle, circle, and text functions.
  
function rect(width, height, color, x, y){
    var rect = new Rectangle(width, height);
    rect.setColor(color);
    rect.setPosition(x, y);
    add(rect);
}
function text(text, font, color, x, y){
    var txt = new Text(text, font);
    txt.setPosition(x - txt.getWidth()/2, y);
    txt.setColor(color);
    add(txt);
}
function circle(radius, color, x, y){
    var circle = new Circle(radius);
    circle.setPosition(x, y);
    circle.setColor(color);
    add(circle);
}

